# -*- coding: utf-8 -*-
"""measure_scalebar.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qgXP2qp1YI2PoCiHrBYobVP5z7dQeN91
"""

def measure_scalebar(lily_im,mm,label):
  """
  Measures the pixel length of the scalebar in a lily mask image and returns the 
  conversion from millimeters to number of pixels
  """

"""
This function takes a lily mask and returns the length of the scale bar at the bottom of 
the image. It skeletonizes the lily mask and labels the objects like in the identify_scalebar
function, then uses the the label parameter to single out the scale bar object. This function 
gets the properties of that object and creates a histogram the scale bar's x coordinates. 
The distance between the two maxes in this histogram is the distance in pixels between the 
two vertical markers on the scale bar; the function takes this distance and divides it by 
the given length of the scalebar in mm. Note: this functon works if the the markers are 
parallel and mostly-vertical, as was the case in the provided data-set.
"""

Parameters
----------
lily  : 2D by 3 int array
        RBG image
mm    : int
        integer length in mm of the scale bar
label : int
          integer number identifing the labeled scale bar object
          identified prior using the identify_scalebar function

Returns
-------
conversion : int
              number of pixels per 1 mm

def measure_scalebar(lily_im,mm,label):
  lily = lily_im<1
  lily = lily.astype(int)

  # Create a skeletonized version of the lily.
  lily_sk = skeletonize(binary_dilation(lily, selem=disk(4)))

  # Label the objects in the skeletonized image.
  lily_label = label(lily_sk) 
  scale_bar = lily_label==label # scale bar previously identified using the "identify_scalebar" function
  scale_bar = lily_label.astype(int) 

  # Get the properties of just the skeleton scale bar
  test = regionprops_table(scale_bar, properties=('coords',)) 
  test = pd.DataFrame(test)

  # get the coordinates of all the pixels in the skeleton scale bar
  bars = test.iloc[3,0]

  # Create a histogram of the bar x coordinates and display it.
  hist, bins = np.histogram(test.iloc[3,0][:,1], np.linspace(0,1500,1501))
  fig, ax = plt.subplots(ncols=1)
  ax.plot(hist)
  xaxis = 'X-Coordinates'
  yaxis = 'Number of Pixels'
  ax.set_xlabel(xaxis)
  ax.set_ylabel(yaxis)
  ax.set_title('Histogram of the Scale Bar X-coordinates')

  #find the distance between the two maxima
  dist = np.argsort(hist)[-1] - np.argsort(hist)[-2]

  #divide by the mm length to get the number of pixel per 1 mm
  conversion = dist / mm
  return conversion

Example
-------
#import matplotlib.pyplot as plt
#import numpy as np
#from google.colab import drive
#from skimage.morphology import label, dilation, binary_dilation, skeletonize
#from skimage.measure import regionprops, regionprops_table
#from skimage.morphology import disk, convex_hull_image
#import pandas as pd
#drive.mount('/content/drive/')

#lily_mask = plt.imread('/content/drive/MyDrive/lilymaskonly.jpg')
#scalebar_object = 4

>>conversion = measure_scalebar(lily_mask, mm_dist, scalebar_object)
conversion