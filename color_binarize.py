# -*- coding: utf-8 -*-
"""color_binarize.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17WD8DPNOGGMqqNaAUdfPMWjM-a-TxzYo
"""

def color_binarize(im, r, g, b):
  """
  Binarizes a given image based on a given rgb value
  """

"""This function takes an image and binarizes it based on a given rgb value. It creates an empty 2D array
the same size as the image. Looping over the pixels in the image, for any pixel whose rgb value is within
a range of +/- 30 of the rgb value given, the corresponding value in the array is set equal to zero (black).
For pixels outside of this range, the corresponding value in the array is set equal to 1 (white). 
If the pixel values are less than 0 or greater than 255, the function will throw an error message. The function
returns the new array, which is the binarized image. 
"""

Parameters
----------
im  : 2D by 3 int array
      RGB color image 
r: int
      integer between 0 and 255
g: int
      integer between 0 and 255
b: int
      integer between 0 and 255

Returns
-------
err_code  : str
            prints error message if pixel value is less than 0 or greater than 255
binary_im : 2D int array
            binarized version of image im

def color_binarize(im, r, g, b):
  w, h, a = im.shape
  binary_im = np.zeros((w,h)) 
  error_code = 'Error: pixel values must be between 0 and 255'

  for x,i in enumerate(im):
    for y,j in enumerate(i):
      temp_r, temp_g, temp_b = j
      if temp_r in range(r-30,r+30) and temp_g in range(g-30,g+30) and temp_b in range(b-30,b+30):
        binary_im[x,y]=0
      else:
        binary_im[x,y]=1
  return binary_im

Example
--------
#import numpy as np
#import scipy as sp
#import matplotlib.pyplot as plt

#from google.colab import drive #used to access functions and test image
#drive.mount('/content/drive', force_remount=True)

#lily = plt.imread('/content/drive/MyDrive/testlilyslice.jpeg')
#rgb_pixel = [215,158,43]

#lily_bi = color_binarize(lily, rgb_pixel[0], rgb_pixel[1], rgb_pixel[2])

#titles = ['Origional', 'Color Binarized']
#fig, ax = plt.subplots(ncols=2, figsize=(10,6))
#ax[0].imshow(lily)
#ax[1].imshow(lily_bi, cmap='gray')

#for i,axi in enumerate(ax):
#  axi.axis('off')
#  axi.set_title(titles[i])